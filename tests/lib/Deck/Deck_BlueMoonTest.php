<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for Deck_BlueMoon.
 * Generated by PHPUnit on 2010-05-06 at 11:06:49.
 */
class Deck_BlueMoonTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Deck_BlueMoon
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Deck_BlueMoon;
		$this->object->deal();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * Should be 6 visible stacks
     */
    public function testGetVisibleStack()
    {
		$this->assertTrue($this->object->getVisibleStack(0) instanceof Stack);
		$this->assertTrue($this->object->getVisibleStack(1) instanceof Stack);
		$this->assertTrue($this->object->getVisibleStack(2) instanceof Stack);
		$this->assertTrue($this->object->getVisibleStack(3) instanceof Stack);
		$this->assertTrue($this->object->getVisibleStack(4) instanceof Stack);
		$this->assertTrue($this->object->getVisibleStack(5) instanceof Stack);
		$this->assertTrue($this->object->getVisibleStack(6) instanceof Stack);
    }

    /**
     * Should be 7 hidden stacks
     */
    public function testGetHiddenStack()
    {
        $this->assertTrue($this->object->getHiddenStack(0) instanceof Stack);
		$this->assertTrue($this->object->getHiddenStack(1) instanceof Stack);
		$this->assertTrue($this->object->getHiddenStack(2) instanceof Stack);
		$this->assertTrue($this->object->getHiddenStack(3) instanceof Stack);
		$this->assertTrue($this->object->getHiddenStack(4) instanceof Stack);
		$this->assertTrue($this->object->getHiddenStack(5) instanceof Stack);
		$this->assertTrue($this->object->getHiddenStack(6) instanceof Stack);
    }

    /**
     * Should be 4 destination stacks
     */
    public function testGetDestinationStack()
    {
        $this->assertTrue($this->object->getDestinationStack(0) instanceof Stack);
		$this->assertTrue($this->object->getDestinationStack(1) instanceof Stack);
		$this->assertTrue($this->object->getDestinationStack(2) instanceof Stack);
		$this->assertTrue($this->object->getDestinationStack(3) instanceof Stack);
    }

    /**
     * @todo Implement testGetStacks().
     */
    public function testGetStacks()
    {
        $stacks = $this->object->getStacks();

		$this->assertTrue(is_array($stacks));
		$this->assertTrue(is_array($stacks['visible']));
		$this->assertTrue(is_array($stacks['hidden']));
		$this->assertTrue(is_array($stacks['destination']));
		foreach ($stacks as $name => $sets) {
			foreach ($sets as $set) {
				$this->assertTrue($set instanceof Stack);
			}
		}
    }
}
?>
